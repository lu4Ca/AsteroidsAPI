// <auto-generated />
using System;
using Asteroids.Infrastructure.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Asteroids.Infrastructure.Migrations
{
    [DbContext(typeof(AsteroidsDbContext))]
    partial class AsteroidsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Asteroids.Domain.AggregatesModels.AsteroidAggregate.Asteroid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AverageDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CloseApproachDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPotentiallyHazardous")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinDiameter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Planet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Velocity")
                        .IsRequired()
						.HasColumnType("decimal(18,2)");

					b.HasKey("Id");

                    b.ToTable("Asteroid");
                });

            modelBuilder.Entity("Asteroids.Domain.AggregatesModels.AsteroidAggregate.AsteroidDateRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AsteroidDateRange");
                });

            modelBuilder.Entity("Asteroids.Domain.AggregatesModels.AsteroidAggregate.AsteroidTop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AsteroidDateRangeId")
                        .HasColumnType("int");

                    b.Property<int>("AsteroidId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AsteroidDateRangeId");

                    b.HasIndex("AsteroidId");

                    b.ToTable("AsteroidTop");
                });

            modelBuilder.Entity("Asteroids.Domain.AggregatesModels.AsteroidAggregate.AsteroidTop", b =>
                {
                    b.HasOne("Asteroids.Domain.AggregatesModels.AsteroidAggregate.AsteroidDateRange", "AsteroidDateRange")
                        .WithMany()
                        .HasForeignKey("AsteroidDateRangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Asteroids.Domain.AggregatesModels.AsteroidAggregate.Asteroid", "Asteroid")
                        .WithMany()
                        .HasForeignKey("AsteroidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asteroid");

                    b.Navigation("AsteroidDateRange");
                });
#pragma warning restore 612, 618
        }
    }
}
